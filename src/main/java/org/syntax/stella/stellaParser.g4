// -*- Java -*- File generated by the BNF Converter (bnfc 2.9.4.1).

// Parser definition for use with ANTLRv4
parser grammar stellaParser;

options {
  tokenVocab = stellaLexer;
}


start_Program returns [ org.syntax.stella.Absyn.Program result ]
  : x=program EOF
    { $result = $x.result; }
  ;
start_ListStellaIdent returns [ org.syntax.stella.Absyn.ListStellaIdent result ]
  : x=listStellaIdent EOF
    { $result = $x.result; }
  ;
start_LanguageDecl returns [ org.syntax.stella.Absyn.LanguageDecl result ]
  : x=languageDecl EOF
    { $result = $x.result; }
  ;
start_Extension returns [ org.syntax.stella.Absyn.Extension result ]
  : x=extension EOF
    { $result = $x.result; }
  ;
start_ListExtensionName returns [ org.syntax.stella.Absyn.ListExtensionName result ]
  : x=listExtensionName EOF
    { $result = $x.result; }
  ;
start_ListExtension returns [ org.syntax.stella.Absyn.ListExtension result ]
  : x=listExtension EOF
    { $result = $x.result; }
  ;
start_Decl returns [ org.syntax.stella.Absyn.Decl result ]
  : x=decl EOF
    { $result = $x.result; }
  ;
start_ListDecl returns [ org.syntax.stella.Absyn.ListDecl result ]
  : x=listDecl EOF
    { $result = $x.result; }
  ;
start_LocalDecl returns [ org.syntax.stella.Absyn.LocalDecl result ]
  : x=localDecl EOF
    { $result = $x.result; }
  ;
start_ListLocalDecl returns [ org.syntax.stella.Absyn.ListLocalDecl result ]
  : x=listLocalDecl EOF
    { $result = $x.result; }
  ;
start_Annotation returns [ org.syntax.stella.Absyn.Annotation result ]
  : x=annotation EOF
    { $result = $x.result; }
  ;
start_ListAnnotation returns [ org.syntax.stella.Absyn.ListAnnotation result ]
  : x=listAnnotation EOF
    { $result = $x.result; }
  ;
start_ParamDecl returns [ org.syntax.stella.Absyn.ParamDecl result ]
  : x=paramDecl EOF
    { $result = $x.result; }
  ;
start_ListParamDecl returns [ org.syntax.stella.Absyn.ListParamDecl result ]
  : x=listParamDecl EOF
    { $result = $x.result; }
  ;
start_ReturnType returns [ org.syntax.stella.Absyn.ReturnType result ]
  : x=returnType EOF
    { $result = $x.result; }
  ;
start_ThrowType returns [ org.syntax.stella.Absyn.ThrowType result ]
  : x=throwType EOF
    { $result = $x.result; }
  ;
start_Type9 returns [ org.syntax.stella.Absyn.Type result ]
  : x=type9 EOF
    { $result = $x.result; }
  ;
start_ListType9 returns [ org.syntax.stella.Absyn.ListType result ]
  : x=listType9 EOF
    { $result = $x.result; }
  ;
start_MatchCase returns [ org.syntax.stella.Absyn.MatchCase result ]
  : x=matchCase EOF
    { $result = $x.result; }
  ;
start_ListMatchCase returns [ org.syntax.stella.Absyn.ListMatchCase result ]
  : x=listMatchCase EOF
    { $result = $x.result; }
  ;
start_OptionalTyping returns [ org.syntax.stella.Absyn.OptionalTyping result ]
  : x=optionalTyping EOF
    { $result = $x.result; }
  ;
start_PatternData returns [ org.syntax.stella.Absyn.PatternData result ]
  : x=patternData EOF
    { $result = $x.result; }
  ;
start_ExprData returns [ org.syntax.stella.Absyn.ExprData result ]
  : x=exprData EOF
    { $result = $x.result; }
  ;
start_Pattern returns [ org.syntax.stella.Absyn.Pattern result ]
  : x=pattern EOF
    { $result = $x.result; }
  ;
start_ListPattern returns [ org.syntax.stella.Absyn.ListPattern result ]
  : x=listPattern EOF
    { $result = $x.result; }
  ;
start_LabelledPattern returns [ org.syntax.stella.Absyn.LabelledPattern result ]
  : x=labelledPattern EOF
    { $result = $x.result; }
  ;
start_ListLabelledPattern returns [ org.syntax.stella.Absyn.ListLabelledPattern result ]
  : x=listLabelledPattern EOF
    { $result = $x.result; }
  ;
start_Binding returns [ org.syntax.stella.Absyn.Binding result ]
  : x=binding EOF
    { $result = $x.result; }
  ;
start_ListBinding returns [ org.syntax.stella.Absyn.ListBinding result ]
  : x=listBinding EOF
    { $result = $x.result; }
  ;
start_Expr returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr EOF
    { $result = $x.result; }
  ;
start_ListExpr returns [ org.syntax.stella.Absyn.ListExpr result ]
  : x=listExpr EOF
    { $result = $x.result; }
  ;
start_Expr1 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr1 EOF
    { $result = $x.result; }
  ;
start_PatternBinding returns [ org.syntax.stella.Absyn.PatternBinding result ]
  : x=patternBinding EOF
    { $result = $x.result; }
  ;
start_ListPatternBinding returns [ org.syntax.stella.Absyn.ListPatternBinding result ]
  : x=listPatternBinding EOF
    { $result = $x.result; }
  ;
start_Expr2 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr2 EOF
    { $result = $x.result; }
  ;
start_ListExpr2 returns [ org.syntax.stella.Absyn.ListExpr result ]
  : x=listExpr2 EOF
    { $result = $x.result; }
  ;
start_Expr3 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr3 EOF
    { $result = $x.result; }
  ;
start_Expr4 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr4 EOF
    { $result = $x.result; }
  ;
start_Expr5 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr5 EOF
    { $result = $x.result; }
  ;
start_Expr6 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr6 EOF
    { $result = $x.result; }
  ;
start_Expr7 returns [ org.syntax.stella.Absyn.Expr result ]
  : x=expr7 EOF
    { $result = $x.result; }
  ;
start_Type returns [ org.syntax.stella.Absyn.Type result ]
  : x=type EOF
    { $result = $x.result; }
  ;
start_Type1 returns [ org.syntax.stella.Absyn.Type result ]
  : x=type1 EOF
    { $result = $x.result; }
  ;
start_Type2 returns [ org.syntax.stella.Absyn.Type result ]
  : x=type2 EOF
    { $result = $x.result; }
  ;
start_Type3 returns [ org.syntax.stella.Absyn.Type result ]
  : x=type3 EOF
    { $result = $x.result; }
  ;
start_ListType returns [ org.syntax.stella.Absyn.ListType result ]
  : x=listType EOF
    { $result = $x.result; }
  ;
start_VariantFieldType returns [ org.syntax.stella.Absyn.VariantFieldType result ]
  : x=variantFieldType EOF
    { $result = $x.result; }
  ;
start_ListVariantFieldType returns [ org.syntax.stella.Absyn.ListVariantFieldType result ]
  : x=listVariantFieldType EOF
    { $result = $x.result; }
  ;
start_RecordFieldType returns [ org.syntax.stella.Absyn.RecordFieldType result ]
  : x=recordFieldType EOF
    { $result = $x.result; }
  ;
start_ListRecordFieldType returns [ org.syntax.stella.Absyn.ListRecordFieldType result ]
  : x=listRecordFieldType EOF
    { $result = $x.result; }
  ;
start_Typing returns [ org.syntax.stella.Absyn.Typing result ]
  : x=typing EOF
    { $result = $x.result; }
  ;

program returns [ org.syntax.stella.Absyn.Program result ]
  : p_1_1=languageDecl p_1_2=listExtension p_1_3=listDecl
    { $result = new org.syntax.stella.Absyn.AProgram($p_1_1.result,$p_1_2.result,$p_1_3.result); }
  ;
listStellaIdent returns [ org.syntax.stella.Absyn.ListStellaIdent result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListStellaIdent(); }
  | p_2_1=StellaIdent
    { $result = new org.syntax.stella.Absyn.ListStellaIdent(); $result.addLast($p_2_1.getText()); }
  | p_3_1=StellaIdent Surrogate_id_SYMB_0 p_3_3=listStellaIdent
    { $result = $p_3_3.result; $result.addFirst($p_3_1.getText()); }
  ;
languageDecl returns [ org.syntax.stella.Absyn.LanguageDecl result ]
  : Surrogate_id_SYMB_60 Surrogate_id_SYMB_45 Surrogate_id_SYMB_1
    { $result = new org.syntax.stella.Absyn.LanguageCore(); }
  ;
extension returns [ org.syntax.stella.Absyn.Extension result ]
  : Surrogate_id_SYMB_48 Surrogate_id_SYMB_78 p_1_3=listExtensionName
    { $result = new org.syntax.stella.Absyn.AnExtension($p_1_3.result); }
  ;
listExtensionName returns [ org.syntax.stella.Absyn.ListExtensionName result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListExtensionName(); }
  | p_2_1=ExtensionName
    { $result = new org.syntax.stella.Absyn.ListExtensionName(); $result.addLast($p_2_1.getText()); }
  | p_3_1=ExtensionName Surrogate_id_SYMB_0 p_3_3=listExtensionName
    { $result = $p_3_3.result; $result.addFirst($p_3_1.getText()); }
  ;
listExtension returns [ org.syntax.stella.Absyn.ListExtension result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListExtension(); }
  | p_2_1=listExtension p_2_2=extension Surrogate_id_SYMB_1
    { $result = $p_2_1.result; $result.addLast($p_2_2.result); }
  ;
decl returns [ org.syntax.stella.Absyn.Decl result ]
  : p_1_1=listAnnotation Surrogate_id_SYMB_51 p_1_3=StellaIdent Surrogate_id_SYMB_2 p_1_5=listParamDecl Surrogate_id_SYMB_3 p_1_7=returnType p_1_8=throwType Surrogate_id_SYMB_4 p_1_10=listDecl Surrogate_id_SYMB_67 p_1_12=expr Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.DeclFun($p_1_1.result,$p_1_3.getText(),$p_1_5.result,$p_1_7.result,$p_1_8.result,$p_1_10.result,$p_1_12.result); }
  | p_2_1=listAnnotation Surrogate_id_SYMB_54 Surrogate_id_SYMB_51 p_2_4=StellaIdent Surrogate_id_SYMB_6 p_2_6=listStellaIdent Surrogate_id_SYMB_7 Surrogate_id_SYMB_2 p_2_9=listParamDecl Surrogate_id_SYMB_3 p_2_11=returnType p_2_12=throwType Surrogate_id_SYMB_4 p_2_14=listDecl Surrogate_id_SYMB_67 p_2_16=expr Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.DeclFunGeneric($p_2_1.result,$p_2_4.getText(),$p_2_6.result,$p_2_9.result,$p_2_11.result,$p_2_12.result,$p_2_14.result,$p_2_16.result); }
  | Surrogate_id_SYMB_74 p_3_2=StellaIdent Surrogate_id_SYMB_8 p_3_4=type
    { $result = new org.syntax.stella.Absyn.DeclTypeAlias($p_3_2.getText(),$p_3_4.result); }
  | Surrogate_id_SYMB_47 Surrogate_id_SYMB_74 Surrogate_id_SYMB_8 p_4_4=type
    { $result = new org.syntax.stella.Absyn.DeclExceptionType($p_4_4.result); }
  | Surrogate_id_SYMB_47 Surrogate_id_SYMB_77 p_5_3=StellaIdent Surrogate_id_SYMB_9 p_5_5=type
    { $result = new org.syntax.stella.Absyn.DeclExceptionVariant($p_5_3.getText(),$p_5_5.result); }
  ;
listDecl returns [ org.syntax.stella.Absyn.ListDecl result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListDecl(); }
  | p_2_1=listDecl p_2_2=decl
    { $result = $p_2_1.result; $result.addLast($p_2_2.result); }
  ;
localDecl returns [ org.syntax.stella.Absyn.LocalDecl result ]
  : p_1_1=decl
    { $result = new org.syntax.stella.Absyn.ALocalDecl($p_1_1.result); }
  ;
listLocalDecl returns [ org.syntax.stella.Absyn.ListLocalDecl result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListLocalDecl(); }
  | p_2_1=listLocalDecl p_2_2=localDecl Surrogate_id_SYMB_1
    { $result = $p_2_1.result; $result.addLast($p_2_2.result); }
  ;
annotation returns [ org.syntax.stella.Absyn.Annotation result ]
  : Surrogate_id_SYMB_58
    { $result = new org.syntax.stella.Absyn.InlineAnnotation(); }
  ;
listAnnotation returns [ org.syntax.stella.Absyn.ListAnnotation result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListAnnotation(); }
  | p_2_1=listAnnotation p_2_2=annotation
    { $result = $p_2_1.result; $result.addLast($p_2_2.result); }
  ;
paramDecl returns [ org.syntax.stella.Absyn.ParamDecl result ]
  : p_1_1=StellaIdent Surrogate_id_SYMB_9 p_1_3=type
    { $result = new org.syntax.stella.Absyn.AParamDecl($p_1_1.getText(),$p_1_3.result); }
  ;
listParamDecl returns [ org.syntax.stella.Absyn.ListParamDecl result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListParamDecl(); }
  | p_2_1=paramDecl
    { $result = new org.syntax.stella.Absyn.ListParamDecl(); $result.addLast($p_2_1.result); }
  | p_3_1=paramDecl Surrogate_id_SYMB_0 p_3_3=listParamDecl
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
returnType returns [ org.syntax.stella.Absyn.ReturnType result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.NoReturnType(); }
  | Surrogate_id_SYMB_10 p_2_2=type
    { $result = new org.syntax.stella.Absyn.SomeReturnType($p_2_2.result); }
  ;
throwType returns [ org.syntax.stella.Absyn.ThrowType result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.NoThrowType(); }
  | Surrogate_id_SYMB_71 p_2_2=listType9
    { $result = new org.syntax.stella.Absyn.SomeThrowType($p_2_2.result); }
  ;
type9 returns [ org.syntax.stella.Absyn.Type result ]
  : p_1_1=type
    { $result = $p_1_1.result; }
  ;
listType9 returns [ org.syntax.stella.Absyn.ListType result ]
  : p_1_1=type9
    { $result = new org.syntax.stella.Absyn.ListType(); $result.addLast($p_1_1.result); }
  | p_2_1=type9 Surrogate_id_SYMB_0 p_2_3=listType9
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
matchCase returns [ org.syntax.stella.Absyn.MatchCase result ]
  : p_1_1=pattern Surrogate_id_SYMB_11 p_1_3=expr
    { $result = new org.syntax.stella.Absyn.AMatchCase($p_1_1.result,$p_1_3.result); }
  ;
listMatchCase returns [ org.syntax.stella.Absyn.ListMatchCase result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListMatchCase(); }
  | p_2_1=matchCase
    { $result = new org.syntax.stella.Absyn.ListMatchCase(); $result.addLast($p_2_1.result); }
  | p_3_1=matchCase Surrogate_id_SYMB_12 p_3_3=listMatchCase
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
optionalTyping returns [ org.syntax.stella.Absyn.OptionalTyping result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.NoTyping(); }
  | Surrogate_id_SYMB_9 p_2_2=type
    { $result = new org.syntax.stella.Absyn.SomeTyping($p_2_2.result); }
  ;
patternData returns [ org.syntax.stella.Absyn.PatternData result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.NoPatternData(); }
  | Surrogate_id_SYMB_8 p_2_2=pattern
    { $result = new org.syntax.stella.Absyn.SomePatternData($p_2_2.result); }
  ;
exprData returns [ org.syntax.stella.Absyn.ExprData result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.NoExprData(); }
  | Surrogate_id_SYMB_8 p_2_2=expr
    { $result = new org.syntax.stella.Absyn.SomeExprData($p_2_2.result); }
  ;
pattern returns [ org.syntax.stella.Absyn.Pattern result ]
  : Surrogate_id_SYMB_13 p_1_2=StellaIdent p_1_3=patternData Surrogate_id_SYMB_14
    { $result = new org.syntax.stella.Absyn.PatternVariant($p_1_2.getText(),$p_1_3.result); }
  | Surrogate_id_SYMB_57 Surrogate_id_SYMB_2 p_2_3=pattern Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.PatternInl($p_2_3.result); }
  | Surrogate_id_SYMB_59 Surrogate_id_SYMB_2 p_3_3=pattern Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.PatternInr($p_3_3.result); }
  | Surrogate_id_SYMB_4 p_4_2=listPattern Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.PatternTuple($p_4_2.result); }
  | Surrogate_id_SYMB_4 p_5_2=listLabelledPattern Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.PatternRecord($p_5_2.result); }
  | Surrogate_id_SYMB_6 p_6_2=listPattern Surrogate_id_SYMB_7
    { $result = new org.syntax.stella.Absyn.PatternList($p_6_2.result); }
  | Surrogate_id_SYMB_2 p_7_2=pattern Surrogate_id_SYMB_0 p_7_4=pattern Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.PatternCons($p_7_2.result,$p_7_4.result); }
  | Surrogate_id_SYMB_49
    { $result = new org.syntax.stella.Absyn.PatternFalse(); }
  | Surrogate_id_SYMB_72
    { $result = new org.syntax.stella.Absyn.PatternTrue(); }
  | Surrogate_id_SYMB_76
    { $result = new org.syntax.stella.Absyn.PatternUnit(); }
  | p_11_1=INTEGER
    { $result = new org.syntax.stella.Absyn.PatternInt(Integer.parseInt($p_11_1.getText())); }
  | Surrogate_id_SYMB_68 Surrogate_id_SYMB_2 p_12_3=pattern Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.PatternSucc($p_12_3.result); }
  | p_13_1=StellaIdent
    { $result = new org.syntax.stella.Absyn.PatternVar($p_13_1.getText()); }
  | Surrogate_id_SYMB_2 p_14_2=pattern Surrogate_id_SYMB_3
    { $result = $p_14_2.result; }
  ;
listPattern returns [ org.syntax.stella.Absyn.ListPattern result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListPattern(); }
  | p_2_1=pattern
    { $result = new org.syntax.stella.Absyn.ListPattern(); $result.addLast($p_2_1.result); }
  | p_3_1=pattern Surrogate_id_SYMB_0 p_3_3=listPattern
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
labelledPattern returns [ org.syntax.stella.Absyn.LabelledPattern result ]
  : p_1_1=StellaIdent Surrogate_id_SYMB_8 p_1_3=pattern
    { $result = new org.syntax.stella.Absyn.ALabelledPattern($p_1_1.getText(),$p_1_3.result); }
  ;
listLabelledPattern returns [ org.syntax.stella.Absyn.ListLabelledPattern result ]
  : p_1_1=labelledPattern
    { $result = new org.syntax.stella.Absyn.ListLabelledPattern(); $result.addLast($p_1_1.result); }
  | p_2_1=labelledPattern Surrogate_id_SYMB_0 p_2_3=listLabelledPattern
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
binding returns [ org.syntax.stella.Absyn.Binding result ]
  : p_1_1=StellaIdent Surrogate_id_SYMB_8 p_1_3=expr
    { $result = new org.syntax.stella.Absyn.ABinding($p_1_1.getText(),$p_1_3.result); }
  ;
listBinding returns [ org.syntax.stella.Absyn.ListBinding result ]
  : p_1_1=binding
    { $result = new org.syntax.stella.Absyn.ListBinding(); $result.addLast($p_1_1.result); }
  | p_2_1=binding Surrogate_id_SYMB_0 p_2_3=listBinding
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
expr returns [ org.syntax.stella.Absyn.Expr result ]
  : p_1_1=expr1 Surrogate_id_SYMB_1 p_1_3=expr
    { $result = new org.syntax.stella.Absyn.Sequence($p_1_1.result,$p_1_3.result); }
  | p_2_1=expr1 Surrogate_id_SYMB_1
    { $result = $p_2_1.result; }
  | Surrogate_id_SYMB_61 p_3_2=listPatternBinding Surrogate_id_SYMB_56 p_3_4=expr
    { $result = new org.syntax.stella.Absyn.Let($p_3_2.result,$p_3_4.result); }
  | Surrogate_id_SYMB_62 p_4_2=listPatternBinding Surrogate_id_SYMB_56 p_4_4=expr
    { $result = new org.syntax.stella.Absyn.LetRec($p_4_2.result,$p_4_4.result); }
  | Surrogate_id_SYMB_54 Surrogate_id_SYMB_6 p_5_3=listStellaIdent Surrogate_id_SYMB_7 p_5_5=expr
    { $result = new org.syntax.stella.Absyn.TypeAbstraction($p_5_3.result,$p_5_5.result); }
  | p_6_1=expr1
    { $result = $p_6_1.result; }
  ;
listExpr returns [ org.syntax.stella.Absyn.ListExpr result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListExpr(); }
  | p_2_1=expr
    { $result = new org.syntax.stella.Absyn.ListExpr(); $result.addLast($p_2_1.result); }
  | p_3_1=expr Surrogate_id_SYMB_0 p_3_3=listExpr
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
expr1 returns [ org.syntax.stella.Absyn.Expr result ]
  : p_1_1=expr2 Surrogate_id_SYMB_15 p_1_3=expr1
    { $result = new org.syntax.stella.Absyn.Assign($p_1_1.result,$p_1_3.result); }
  | Surrogate_id_SYMB_55 p_2_2=expr1 Surrogate_id_SYMB_69 p_2_4=expr1 Surrogate_id_SYMB_46 p_2_6=expr1
    { $result = new org.syntax.stella.Absyn.If($p_2_2.result,$p_2_4.result,$p_2_6.result); }
  | p_3_1=expr2
    { $result = $p_3_1.result; }
  ;
patternBinding returns [ org.syntax.stella.Absyn.PatternBinding result ]
  : p_1_1=pattern Surrogate_id_SYMB_8 p_1_3=expr
    { $result = new org.syntax.stella.Absyn.APatternBinding($p_1_1.result,$p_1_3.result); }
  ;
listPatternBinding returns [ org.syntax.stella.Absyn.ListPatternBinding result ]
  : p_1_1=patternBinding
    { $result = new org.syntax.stella.Absyn.ListPatternBinding(); $result.addLast($p_1_1.result); }
  | p_2_1=patternBinding Surrogate_id_SYMB_0 p_2_3=listPatternBinding
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
expr2 returns [ org.syntax.stella.Absyn.Expr result ]
  : p_1_1=expr3 Surrogate_id_SYMB_16 p_1_3=expr3
    { $result = new org.syntax.stella.Absyn.LessThan($p_1_1.result,$p_1_3.result); }
  | p_2_1=expr3 Surrogate_id_SYMB_17 p_2_3=expr3
    { $result = new org.syntax.stella.Absyn.LessThanOrEqual($p_2_1.result,$p_2_3.result); }
  | p_3_1=expr3 Surrogate_id_SYMB_18 p_3_3=expr3
    { $result = new org.syntax.stella.Absyn.GreaterThan($p_3_1.result,$p_3_3.result); }
  | p_4_1=expr3 Surrogate_id_SYMB_19 p_4_3=expr3
    { $result = new org.syntax.stella.Absyn.GreaterThanOrEqual($p_4_1.result,$p_4_3.result); }
  | p_5_1=expr3 Surrogate_id_SYMB_20 p_5_3=expr3
    { $result = new org.syntax.stella.Absyn.Equal($p_5_1.result,$p_5_3.result); }
  | p_6_1=expr3 Surrogate_id_SYMB_21 p_6_3=expr3
    { $result = new org.syntax.stella.Absyn.NotEqual($p_6_1.result,$p_6_3.result); }
  | p_7_1=expr3
    { $result = $p_7_1.result; }
  ;
listExpr2 returns [ org.syntax.stella.Absyn.ListExpr result ]
  : p_1_1=expr2 Surrogate_id_SYMB_1
    { $result = new org.syntax.stella.Absyn.ListExpr(); $result.addLast($p_1_1.result); }
  | p_2_1=expr2 Surrogate_id_SYMB_1 p_2_3=listExpr2
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
expr3 returns [ org.syntax.stella.Absyn.Expr result ]
  : p_1_1=expr3 Surrogate_id_SYMB_41 p_1_3=type2
    { $result = new org.syntax.stella.Absyn.TypeAsc($p_1_1.result,$p_1_3.result); }
  | p_2_1=expr3 Surrogate_id_SYMB_42 Surrogate_id_SYMB_41 p_2_4=type2
    { $result = new org.syntax.stella.Absyn.TypeCast($p_2_1.result,$p_2_4.result); }
  | Surrogate_id_SYMB_51 Surrogate_id_SYMB_2 p_3_3=listParamDecl Surrogate_id_SYMB_3 Surrogate_id_SYMB_4 Surrogate_id_SYMB_67 p_3_7=expr Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.Abstraction($p_3_3.result,$p_3_7.result); }
  | Surrogate_id_SYMB_13 p_4_2=StellaIdent p_4_3=exprData Surrogate_id_SYMB_14
    { $result = new org.syntax.stella.Absyn.Variant($p_4_2.getText(),$p_4_3.result); }
  | Surrogate_id_SYMB_63 p_5_2=expr2 Surrogate_id_SYMB_4 p_5_4=listMatchCase Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.Match($p_5_2.result,$p_5_4.result); }
  | Surrogate_id_SYMB_6 p_6_2=listExpr Surrogate_id_SYMB_7
    { $result = new org.syntax.stella.Absyn.List($p_6_2.result); }
  | p_7_1=expr3 Surrogate_id_SYMB_22 p_7_3=expr4
    { $result = new org.syntax.stella.Absyn.Add($p_7_1.result,$p_7_3.result); }
  | p_8_1=expr3 Surrogate_id_SYMB_23 p_8_3=expr4
    { $result = new org.syntax.stella.Absyn.Subtract($p_8_1.result,$p_8_3.result); }
  | p_9_1=expr3 Surrogate_id_SYMB_66 p_9_3=expr4
    { $result = new org.syntax.stella.Absyn.LogicOr($p_9_1.result,$p_9_3.result); }
  | p_10_1=expr4
    { $result = $p_10_1.result; }
  ;
expr4 returns [ org.syntax.stella.Absyn.Expr result ]
  : p_1_1=expr4 Surrogate_id_SYMB_24 p_1_3=expr5
    { $result = new org.syntax.stella.Absyn.Multiply($p_1_1.result,$p_1_3.result); }
  | p_2_1=expr4 Surrogate_id_SYMB_25 p_2_3=expr5
    { $result = new org.syntax.stella.Absyn.Divide($p_2_1.result,$p_2_3.result); }
  | p_3_1=expr4 Surrogate_id_SYMB_40 p_3_3=expr5
    { $result = new org.syntax.stella.Absyn.LogicAnd($p_3_1.result,$p_3_3.result); }
  | p_4_1=expr5
    { $result = $p_4_1.result; }
  ;
expr5 returns [ org.syntax.stella.Absyn.Expr result ]
  : Surrogate_id_SYMB_64 Surrogate_id_SYMB_2 p_1_3=expr5 Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Ref($p_1_3.result); }
  | Surrogate_id_SYMB_24 p_2_2=expr5
    { $result = new org.syntax.stella.Absyn.Deref($p_2_2.result); }
  | p_3_1=expr6
    { $result = $p_3_1.result; }
  ;
expr6 returns [ org.syntax.stella.Absyn.Expr result ]
  : p_1_1=expr6 Surrogate_id_SYMB_2 p_1_3=listExpr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Application($p_1_1.result,$p_1_3.result); }
  | p_2_1=expr6 Surrogate_id_SYMB_6 p_2_3=listType Surrogate_id_SYMB_7
    { $result = new org.syntax.stella.Absyn.TypeApplication($p_2_1.result,$p_2_3.result); }
  | p_3_1=expr6 Surrogate_id_SYMB_26 p_3_3=StellaIdent
    { $result = new org.syntax.stella.Absyn.DotRecord($p_3_1.result,$p_3_3.getText()); }
  | p_4_1=expr6 Surrogate_id_SYMB_26 p_4_3=INTEGER
    { $result = new org.syntax.stella.Absyn.DotTuple($p_4_1.result,Integer.parseInt($p_4_3.getText())); }
  | Surrogate_id_SYMB_4 p_5_2=listExpr Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.Tuple($p_5_2.result); }
  | Surrogate_id_SYMB_4 p_6_2=listBinding Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.Record($p_6_2.result); }
  | Surrogate_id_SYMB_44 Surrogate_id_SYMB_2 p_7_3=expr Surrogate_id_SYMB_0 p_7_5=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.ConsList($p_7_3.result,$p_7_5.result); }
  | Surrogate_id_SYMB_27 Surrogate_id_SYMB_2 p_8_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Head($p_8_3.result); }
  | Surrogate_id_SYMB_28 Surrogate_id_SYMB_2 p_9_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.IsEmpty($p_9_3.result); }
  | Surrogate_id_SYMB_29 Surrogate_id_SYMB_2 p_10_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Tail($p_10_3.result); }
  | Surrogate_id_SYMB_30
    { $result = new org.syntax.stella.Absyn.Panic(); }
  | Surrogate_id_SYMB_70 Surrogate_id_SYMB_2 p_12_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Throw($p_12_3.result); }
  | Surrogate_id_SYMB_73 Surrogate_id_SYMB_4 p_13_3=expr Surrogate_id_SYMB_5 Surrogate_id_SYMB_43 Surrogate_id_SYMB_4 p_13_7=pattern Surrogate_id_SYMB_11 p_13_9=expr Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.TryCatch($p_13_3.result,$p_13_7.result,$p_13_9.result); }
  | Surrogate_id_SYMB_73 Surrogate_id_SYMB_4 p_14_3=expr Surrogate_id_SYMB_5 Surrogate_id_SYMB_78 Surrogate_id_SYMB_4 p_14_7=expr Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.TryWith($p_14_3.result,$p_14_7.result); }
  | Surrogate_id_SYMB_57 Surrogate_id_SYMB_2 p_15_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Inl($p_15_3.result); }
  | Surrogate_id_SYMB_59 Surrogate_id_SYMB_2 p_16_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Inr($p_16_3.result); }
  | Surrogate_id_SYMB_68 Surrogate_id_SYMB_2 p_17_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Succ($p_17_3.result); }
  | Surrogate_id_SYMB_65 Surrogate_id_SYMB_2 p_18_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.LogicNot($p_18_3.result); }
  | Surrogate_id_SYMB_31 Surrogate_id_SYMB_2 p_19_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Pred($p_19_3.result); }
  | Surrogate_id_SYMB_32 Surrogate_id_SYMB_2 p_20_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.IsZero($p_20_3.result); }
  | Surrogate_id_SYMB_50 Surrogate_id_SYMB_2 p_21_3=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.Fix($p_21_3.result); }
  | Surrogate_id_SYMB_33 Surrogate_id_SYMB_2 p_22_3=expr Surrogate_id_SYMB_0 p_22_5=expr Surrogate_id_SYMB_0 p_22_7=expr Surrogate_id_SYMB_3
    { $result = new org.syntax.stella.Absyn.NatRec($p_22_3.result,$p_22_5.result,$p_22_7.result); }
  | Surrogate_id_SYMB_52 Surrogate_id_SYMB_6 p_23_3=type Surrogate_id_SYMB_7 p_23_5=expr7
    { $result = new org.syntax.stella.Absyn.Fold($p_23_3.result,$p_23_5.result); }
  | Surrogate_id_SYMB_75 Surrogate_id_SYMB_6 p_24_3=type Surrogate_id_SYMB_7 p_24_5=expr7
    { $result = new org.syntax.stella.Absyn.Unfold($p_24_3.result,$p_24_5.result); }
  | p_25_1=expr7
    { $result = $p_25_1.result; }
  ;
expr7 returns [ org.syntax.stella.Absyn.Expr result ]
  : Surrogate_id_SYMB_72
    { $result = new org.syntax.stella.Absyn.ConstTrue(); }
  | Surrogate_id_SYMB_49
    { $result = new org.syntax.stella.Absyn.ConstFalse(); }
  | Surrogate_id_SYMB_76
    { $result = new org.syntax.stella.Absyn.ConstUnit(); }
  | p_4_1=INTEGER
    { $result = new org.syntax.stella.Absyn.ConstInt(Integer.parseInt($p_4_1.getText())); }
  | p_5_1=MemoryAddress
    { $result = new org.syntax.stella.Absyn.ConstMemory($p_5_1.getText()); }
  | p_6_1=StellaIdent
    { $result = new org.syntax.stella.Absyn.Var($p_6_1.getText()); }
  | Surrogate_id_SYMB_2 p_7_2=expr Surrogate_id_SYMB_3
    { $result = $p_7_2.result; }
  ;
type returns [ org.syntax.stella.Absyn.Type result ]
  : Surrogate_id_SYMB_51 Surrogate_id_SYMB_2 p_1_3=listType Surrogate_id_SYMB_3 Surrogate_id_SYMB_10 p_1_6=type
    { $result = new org.syntax.stella.Absyn.TypeFun($p_1_3.result,$p_1_6.result); }
  | Surrogate_id_SYMB_53 p_2_2=listStellaIdent Surrogate_id_SYMB_26 p_2_4=type
    { $result = new org.syntax.stella.Absyn.TypeForAll($p_2_2.result,$p_2_4.result); }
  | Surrogate_id_SYMB_79 p_3_2=StellaIdent Surrogate_id_SYMB_26 p_3_4=type
    { $result = new org.syntax.stella.Absyn.TypeRec($p_3_2.getText(),$p_3_4.result); }
  | p_4_1=type1
    { $result = $p_4_1.result; }
  ;
type1 returns [ org.syntax.stella.Absyn.Type result ]
  : p_1_1=type2 Surrogate_id_SYMB_22 p_1_3=type2
    { $result = new org.syntax.stella.Absyn.TypeSum($p_1_1.result,$p_1_3.result); }
  | p_2_1=type2
    { $result = $p_2_1.result; }
  ;
type2 returns [ org.syntax.stella.Absyn.Type result ]
  : Surrogate_id_SYMB_4 p_1_2=listType Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.TypeTuple($p_1_2.result); }
  | Surrogate_id_SYMB_4 p_2_2=listRecordFieldType Surrogate_id_SYMB_5
    { $result = new org.syntax.stella.Absyn.TypeRecord($p_2_2.result); }
  | Surrogate_id_SYMB_13 p_3_2=listVariantFieldType Surrogate_id_SYMB_14
    { $result = new org.syntax.stella.Absyn.TypeVariant($p_3_2.result); }
  | Surrogate_id_SYMB_6 p_4_2=type Surrogate_id_SYMB_7
    { $result = new org.syntax.stella.Absyn.TypeList($p_4_2.result); }
  | p_5_1=type3
    { $result = $p_5_1.result; }
  ;
type3 returns [ org.syntax.stella.Absyn.Type result ]
  : Surrogate_id_SYMB_35
    { $result = new org.syntax.stella.Absyn.TypeBool(); }
  | Surrogate_id_SYMB_37
    { $result = new org.syntax.stella.Absyn.TypeNat(); }
  | Surrogate_id_SYMB_39
    { $result = new org.syntax.stella.Absyn.TypeUnit(); }
  | Surrogate_id_SYMB_38
    { $result = new org.syntax.stella.Absyn.TypeTop(); }
  | Surrogate_id_SYMB_36
    { $result = new org.syntax.stella.Absyn.TypeBottom(); }
  | Surrogate_id_SYMB_34 p_6_2=type2
    { $result = new org.syntax.stella.Absyn.TypeRef($p_6_2.result); }
  | p_7_1=StellaIdent
    { $result = new org.syntax.stella.Absyn.TypeVar($p_7_1.getText()); }
  | Surrogate_id_SYMB_2 p_8_2=type Surrogate_id_SYMB_3
    { $result = $p_8_2.result; }
  ;
listType returns [ org.syntax.stella.Absyn.ListType result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListType(); }
  | p_2_1=type
    { $result = new org.syntax.stella.Absyn.ListType(); $result.addLast($p_2_1.result); }
  | p_3_1=type Surrogate_id_SYMB_0 p_3_3=listType
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
variantFieldType returns [ org.syntax.stella.Absyn.VariantFieldType result ]
  : p_1_1=StellaIdent p_1_2=optionalTyping
    { $result = new org.syntax.stella.Absyn.AVariantFieldType($p_1_1.getText(),$p_1_2.result); }
  ;
listVariantFieldType returns [ org.syntax.stella.Absyn.ListVariantFieldType result ]
  :  /* empty */
    { $result = new org.syntax.stella.Absyn.ListVariantFieldType(); }
  | p_2_1=variantFieldType
    { $result = new org.syntax.stella.Absyn.ListVariantFieldType(); $result.addLast($p_2_1.result); }
  | p_3_1=variantFieldType Surrogate_id_SYMB_0 p_3_3=listVariantFieldType
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
recordFieldType returns [ org.syntax.stella.Absyn.RecordFieldType result ]
  : p_1_1=StellaIdent Surrogate_id_SYMB_9 p_1_3=type
    { $result = new org.syntax.stella.Absyn.ARecordFieldType($p_1_1.getText(),$p_1_3.result); }
  ;
listRecordFieldType returns [ org.syntax.stella.Absyn.ListRecordFieldType result ]
  : p_1_1=recordFieldType
    { $result = new org.syntax.stella.Absyn.ListRecordFieldType(); $result.addLast($p_1_1.result); }
  | p_2_1=recordFieldType Surrogate_id_SYMB_0 p_2_3=listRecordFieldType
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
typing returns [ org.syntax.stella.Absyn.Typing result ]
  : p_1_1=expr Surrogate_id_SYMB_9 p_1_3=type
    { $result = new org.syntax.stella.Absyn.ATyping($p_1_1.result,$p_1_3.result); }
  ;

